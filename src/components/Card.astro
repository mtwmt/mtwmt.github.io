---
import { Icon } from "astro-icon/components";
import FormattedDate from "./FormattedDate.astro";
import Tags from "./Tags.astro";
import Badge from "./Badge.astro";

export interface Props {
  variant?: "project" | "post" | "default";
  title?: string;
  description?: string;
  date?: Date;
  tags?: string[];
  href?: string;
  year?: string;
  skills?: Array<{
    name: string;
    color?:
      | "primary"
      | "accent"
      | "success"
      | "warning"
      | "error"
      | "info"
      | "neutral";
  }>;
  icon?: string;
  className?: string;
  hasPushpin?: boolean;
}

const {
  variant = "default",
  title,
  description,
  date,
  tags,
  href,
  year,
  skills = [],
  icon,
  className = "",
  hasPushpin = false,
} = Astro.props;

// Manga/Comic Book 風格：粗黑邊框 + 硬陰影（偏移式）
// 亮色模式：黑色陰影 / 暗色模式：白色陰影（反轉）
const baseClasses =
  "relative overflow-visible p-6 md:p-8 bg-white dark:bg-gray-800 border-2 border-gray-900 dark:border-gray-200 rounded-md transition-all duration-200 shadow-[4px_4px_0_rgba(0,0,0,0.15)] dark:shadow-[4px_4px_0_rgba(255,255,255,0.15)]";
const hoverClasses =
  "hover:-translate-y-2 hover:shadow-[6px_6px_0_rgba(0,0,0,0.25)] dark:hover:shadow-[6px_6px_0_rgba(255,255,255,0.25)]";
---

{
  variant === "project" && (
    <div class={`${baseClasses} ${className}`}>
      {hasPushpin && (
        <div class="absolute top-4 right-4 z-10">
          <Icon
            name="la:thumbtack"
            class="text-red-600 w-7 h-7 transform rotate-45 drop-shadow-lg"
          />
        </div>
      )}

      <h3 class="text-2xl font-extrabold leading-tight mb-6 line-clamp-2">
        {href ? (
          <a
            href={href}
            target="_blank"
            class="text-gray-900 dark:text-white hover:text-primary-500 transition-colors"
          >
            {title}
          </a>
        ) : (
          <span class="text-gray-900 dark:text-white">{title}</span>
        )}
      </h3>

      {description && <p class="text-light text-sm mb-4">{description}</p>}

      {skills.length > 0 && (
        <div class="mb-6 flex flex-wrap gap-2.5">
          {skills.map((skill) => (
            <Badge color={skill.color || "info"} size="sm">
              {skill.name}
            </Badge>
          ))}
        </div>
      )}

      {year && (
        <div class="flex items-center gap-2 text-gray-600 dark:text-gray-400 text-sm font-medium">
          <Icon name="ph:flag-duotone" class="w-5 h-5" />
          <span>{year}</span>
        </div>
      )}
    </div>
  )
}

{
  variant === "post" && (
    <div class={`${baseClasses} ${className}`}>
      {tags && (
        <div class="text-right mb-4">
          <Tags tags={tags} />
        </div>
      )}

      <div class="flex items-center gap-5">
        {date && (
          <FormattedDate
            date={date}
            type="graphics"
            className="text-left text-primary-600 dark:text-primary-400 flex-shrink-0"
          />
        )}

        <div class="flex-1">
          {href ? (
            <a href={href} class="block group">
              <h3 class="text-xl font-extrabold mb-3 text-gray-900 dark:text-white group-hover:text-primary-500 transition-colors line-clamp-2 leading-tight">
                {title}
              </h3>
              {description && (
                <p class="text-sm text-light mb-2 line-clamp-2">
                  {description}
                </p>
              )}
              <p class="text-xs text-gray-500 dark:text-gray-400 font-medium">
                READ MORE →
              </p>
            </a>
          ) : (
            <>
              <h3 class="text-xl font-extrabold mb-3 text-gray-900 dark:text-white line-clamp-2 leading-tight">
                {title}
              </h3>
              {description && (
                <p class="text-sm text-light line-clamp-2">{description}</p>
              )}
            </>
          )}
        </div>
      </div>
    </div>
  )
}

{
  variant === "default" && (
    <div class={`${baseClasses} ${className}`}>
      <slot>
        {icon && (
          <div class="mb-4">
            <Icon name={icon} class="w-8 h-8 text-primary-500" />
          </div>
        )}

        {title && (
          <h3 class="text-xl font-bold mb-3 text-default">
            {href ? (
              <a href={href} class="hover:text-primary-500 transition-colors">
                {title}
              </a>
            ) : (
              title
            )}
          </h3>
        )}

        {description && (
          <p class="text-light text-sm leading-relaxed">{description}</p>
        )}

        {tags && tags.length > 0 && (
          <div class="mt-4">
            <Tags tags={tags} />
          </div>
        )}
      </slot>
    </div>
  )
}
